<!--#include file="header.htm" -->

<style>
  table,
  th,
  td {
    border: 1px solid black;
    border-collapse: collapse;
  }

  th,
  td {
    padding: 15px;
    text-align: left;
  }

  table#t01 {
    width: 100%;
    background-color: #f1f1c1;
  }
</style>

<div id="content">

  <h1>Vending Machine Demo</h1>
  <p>The <b>GET</b> method appends the data to the end of the URI. You'll see this
    data following the question mark (?) in your browser's address bar. Data sent via GET is automatically
    decoded, and stored in the current HTTP connection data buffer. Your application will
    handle the data in the <code>TCPIP_HTTP_GetExecute</code> callback. <code>TCPIP_HTTP_ArgGet</code>
    function provides an easy method to retrieve submitted values for processing.</p>

  <p>As an example, this GET form gets count of the VM items as user input and updates the table </p>
  <form method="get" action="VM.htm">
    <div class="examplebox">
      <b>ITEM</b> <select name="ITEM">

        <option value="0" ~ITEM(1)~>1</option>
        <option value="1" ~ITEM(1)~>2</option>
        <option value="2" ~ITEM(2)~>3</option>
        <option value="3" ~ITEM(3)~>4</option>
        <option value="4" ~ITEM(4)~>5</option>
        <option value="5" ~ITEM(5)~>6</option>
        <option value="6" ~ITEM(6)~>7</option>
      </select>&nbsp;
      <b>COUNT</b> <select name="COUNT">
        <option value="0" ~COUNT(0)~>0</option>
        <option value="1" ~COUNT(1)~>1</option>
        <option value="2" ~COUNT(2)~>2</option>
        <option value="3" ~COUNT(3)~>3</option>
        <option value="4" ~COUNT(4)~>4</option>
        <option value="5" ~COUNT(5)~>5</option>
        <option value="6" ~COUNT(6)~>6</option>
        <option value="7" ~COUNT(7)~>7</option>
        <option value="8" ~COUNT(7)~>8</option>
        <option value="9" ~COUNT(9)~>9</option>

      </select>&nbsp;

      <br /><input type="submit" value="UPDATE" style="margin-top:5px;">
    </div>
  </form>



<!--
  <h5>
    <center>VM TRACKER</center>
  </h5>
-->

  <table id=t01">
    <caption><b>VM TRACKER</b></caption>
    <tr>
      <th>1. Coca-Cola</th>
      <th>2. Coca-Cola Diet</th>
      <th>3. Pepsi</th>
      <th>4. Dr Pepper</th>
      <th>5. Sprite</th>
      <th>6. Fanta</th>
      <th>7. Dasani </th>
    </tr>
    <tr>
      <td span id=VMITEM0>~VMITEM(0)~</td>
      <td span id=VMITEM1>~VMITEM(1)~</td>
      <td span id=VMITEM2>~VMITEM(2)~</td>
      <td span id=VMITEM3>~VMITEM(3)~</td>
      <td span id=VMITEM4>~VMITEM(4)~</td>
      <td span id=VMITEM5>~VMITEM(5)~</td>
      <td span id=VMITEM6>~VMITEM(6)~</td>
    </tr>
  </table>
</div>
<!--<button onclick="Get_XML();">Get XML</button> //-->

<script type="text/javascript">

  window.addEventListener("load", function () {
    Get_XML();
  });

  function loadXMLDoc(dname) //Magic function creating local XML copy
  {
    if (window.XMLHttpRequest) //Create local XML document
    {
      xhttp = new XMLHttpRequest();
    }
    else //Use for older browsers
    {
      xhttp = new ActiveXObject("Microsoft.XMLHTTP");
    }
    //Request the XML file from server with GET
    xhttp.open("GET", dname, false);
    xhttp.send("");
    return xhttp.responseXML; //Return the local copy
  }
  function Get_XML() {
    //These are optional buffer variables that make the code easier to read
    var XML_Data1;
    var XML_Data2;
    var XML_Data3;
    var XML_Data4;
    var XML_Data5;
    var XML_Data6;
    var XML_Data7;
    xmlDoc = loadXMLDoc("My_Data.xml");//Creates a client copy of XML
    //Store the value of My_Data tag in the XML_Data buffer variables
    XML_Data1 = xmlDoc.getElementsByTagName("VMITEM0")[0].childNodes[0].nodeValue;
    XML_Data2 = xmlDoc.getElementsByTagName("VMITEM1")[0].childNodes[0].nodeValue;
    XML_Data3 = xmlDoc.getElementsByTagName("VMITEM2")[0].childNodes[0].nodeValue;
    XML_Data4 = xmlDoc.getElementsByTagName("VMITEM3")[0].childNodes[0].nodeValue;
    XML_Data5 = xmlDoc.getElementsByTagName("VMITEM4")[0].childNodes[0].nodeValue;
    XML_Data6 = xmlDoc.getElementsByTagName("VMITEM5")[0].childNodes[0].nodeValue;
    XML_Data7 = xmlDoc.getElementsByTagName("VMITEM6")[0].childNodes[0].nodeValue;


    //Write the buffer variables at the span tags with the appropriate ids
    document.getElementById("VMITEM0").innerHTML = XML_Data1;
    document.getElementById("VMITEM1").innerHTML = XML_Data2;
    document.getElementById("VMITEM2").innerHTML = XML_Data3;
    document.getElementById("VMITEM3").innerHTML = XML_Data4;
    document.getElementById("VMITEM4").innerHTML = XML_Data5;
    document.getElementById("VMITEM5").innerHTML = XML_Data6;
    document.getElementById("VMITEM6").innerHTML = XML_Data7;

    setTimeout("Get_XML();", 500); //Loop every 500 milliseconds
  }
</script>



<!--#include file="footer.htm" -->
