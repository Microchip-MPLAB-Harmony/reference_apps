#include "ack_user_config.h"
#ifdef ACK_PERCENTAGE_CONTROLLER

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Jun 24 21:19:23 2019. */

#ifndef PB_V3AVS_CAPABILITIES_V3ALEXAPERCENTAGECONTROLLER_PB_H_INCLUDED
#define PB_V3AVS_CAPABILITIES_V3ALEXAPERCENTAGECONTROLLER_PB_H_INCLUDED
#include <pb.h>

#include "v3avs_types/V3Percentage.pb.h"

#include "v3avs_types/V3PercentageDelta.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _v3avs_capabilities_V3AlexaPercentageController_DirectiveName {
    v3avs_capabilities_V3AlexaPercentageController_DirectiveName_SET_PERCENTAGE = 0,
    v3avs_capabilities_V3AlexaPercentageController_DirectiveName_ADJUST_PERCENTAGE = 1
} v3avs_capabilities_V3AlexaPercentageController_DirectiveName;
#define _v3avs_capabilities_V3AlexaPercentageController_DirectiveName_MIN v3avs_capabilities_V3AlexaPercentageController_DirectiveName_SET_PERCENTAGE
#define _v3avs_capabilities_V3AlexaPercentageController_DirectiveName_MAX v3avs_capabilities_V3AlexaPercentageController_DirectiveName_ADJUST_PERCENTAGE
#define _v3avs_capabilities_V3AlexaPercentageController_DirectiveName_ARRAYSIZE ((v3avs_capabilities_V3AlexaPercentageController_DirectiveName)(v3avs_capabilities_V3AlexaPercentageController_DirectiveName_ADJUST_PERCENTAGE+1))

typedef enum _v3avs_capabilities_V3AlexaPercentageController_PropertyName {
    v3avs_capabilities_V3AlexaPercentageController_PropertyName_PERCENTAGE_PROP = 0
} v3avs_capabilities_V3AlexaPercentageController_PropertyName;
#define _v3avs_capabilities_V3AlexaPercentageController_PropertyName_MIN v3avs_capabilities_V3AlexaPercentageController_PropertyName_PERCENTAGE_PROP
#define _v3avs_capabilities_V3AlexaPercentageController_PropertyName_MAX v3avs_capabilities_V3AlexaPercentageController_PropertyName_PERCENTAGE_PROP
#define _v3avs_capabilities_V3AlexaPercentageController_PropertyName_ARRAYSIZE ((v3avs_capabilities_V3AlexaPercentageController_PropertyName)(v3avs_capabilities_V3AlexaPercentageController_PropertyName_PERCENTAGE_PROP+1))

/* Struct definitions */
typedef struct _v3avs_capabilities_V3AlexaPercentageController {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPercentageController) */
} v3avs_capabilities_V3AlexaPercentageController;

typedef struct _v3avs_capabilities_V3AlexaPercentageController_Event {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPercentageController_Event) */
} v3avs_capabilities_V3AlexaPercentageController_Event;

typedef struct _v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage {
    v3avs_types_V3PercentageDelta percentage_delta;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage) */
} v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage;

typedef struct _v3avs_capabilities_V3AlexaPercentageController_PercentageProperty {
    v3avs_types_V3Percentage percentage;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPercentageController_PercentageProperty) */
} v3avs_capabilities_V3AlexaPercentageController_PercentageProperty;

typedef struct _v3avs_capabilities_V3AlexaPercentageController_SetPercentage {
    v3avs_types_V3Percentage percentage;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPercentageController_SetPercentage) */
} v3avs_capabilities_V3AlexaPercentageController_SetPercentage;

typedef struct _v3avs_capabilities_V3AlexaPercentageController_Directive {
    v3avs_capabilities_V3AlexaPercentageController_DirectiveName directive_name;
    pb_size_t which_payload;
    union {
        v3avs_capabilities_V3AlexaPercentageController_SetPercentage set_percentage;
        v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage adjust_percentage;
    } payload;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPercentageController_Directive) */
} v3avs_capabilities_V3AlexaPercentageController_Directive;

/* Default values for struct fields */

/* Initializer values for message structs */
#define v3avs_capabilities_V3AlexaPercentageController_init_default {0}
#define v3avs_capabilities_V3AlexaPercentageController_Directive_init_default {(v3avs_capabilities_V3AlexaPercentageController_DirectiveName)0, 0, {v3avs_capabilities_V3AlexaPercentageController_SetPercentage_init_default}}
#define v3avs_capabilities_V3AlexaPercentageController_Event_init_default {0}
#define v3avs_capabilities_V3AlexaPercentageController_SetPercentage_init_default {v3avs_types_V3Percentage_init_default}
#define v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage_init_default {v3avs_types_V3PercentageDelta_init_default}
#define v3avs_capabilities_V3AlexaPercentageController_PercentageProperty_init_default {v3avs_types_V3Percentage_init_default}
#define v3avs_capabilities_V3AlexaPercentageController_init_zero {0}
#define v3avs_capabilities_V3AlexaPercentageController_Directive_init_zero {(v3avs_capabilities_V3AlexaPercentageController_DirectiveName)0, 0, {v3avs_capabilities_V3AlexaPercentageController_SetPercentage_init_zero}}
#define v3avs_capabilities_V3AlexaPercentageController_Event_init_zero {0}
#define v3avs_capabilities_V3AlexaPercentageController_SetPercentage_init_zero {v3avs_types_V3Percentage_init_zero}
#define v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage_init_zero {v3avs_types_V3PercentageDelta_init_zero}
#define v3avs_capabilities_V3AlexaPercentageController_PercentageProperty_init_zero {v3avs_types_V3Percentage_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage_percentage_delta_tag 1
#define v3avs_capabilities_V3AlexaPercentageController_PercentageProperty_percentage_tag 1
#define v3avs_capabilities_V3AlexaPercentageController_SetPercentage_percentage_tag 1
#define v3avs_capabilities_V3AlexaPercentageController_Directive_set_percentage_tag 2
#define v3avs_capabilities_V3AlexaPercentageController_Directive_adjust_percentage_tag 3
#define v3avs_capabilities_V3AlexaPercentageController_Directive_directive_name_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t v3avs_capabilities_V3AlexaPercentageController_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaPercentageController_Directive_fields[4];
extern const pb_field_t v3avs_capabilities_V3AlexaPercentageController_Event_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaPercentageController_SetPercentage_fields[2];
extern const pb_field_t v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage_fields[2];
extern const pb_field_t v3avs_capabilities_V3AlexaPercentageController_PercentageProperty_fields[2];

/* Maximum encoded size of messages (where known) */
#define v3avs_capabilities_V3AlexaPercentageController_size 0
#define v3avs_capabilities_V3AlexaPercentageController_Directive_size 12
#define v3avs_capabilities_V3AlexaPercentageController_Event_size 0
#define v3avs_capabilities_V3AlexaPercentageController_SetPercentage_size 8
#define v3avs_capabilities_V3AlexaPercentageController_AdjustPercentage_size 8
#define v3avs_capabilities_V3AlexaPercentageController_PercentageProperty_size 8

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3ALEXAPERCENTAGECONTROLLER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

#endif
