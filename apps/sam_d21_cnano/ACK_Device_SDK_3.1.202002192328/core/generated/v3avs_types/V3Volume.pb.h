/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Thu May 02 07:30:45 2019. */

#ifndef PB_V3AVS_TYPES_V3VOLUME_PB_H_INCLUDED
#define PB_V3AVS_TYPES_V3VOLUME_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _v3avs_types_V3Volume_Unit {
    v3avs_types_V3Volume_Unit_LITER = 0,
    v3avs_types_V3Volume_Unit_MILLILITER = 1,
    v3avs_types_V3Volume_Unit_TEASPOON = 2,
    v3avs_types_V3Volume_Unit_UK_TEASPOON = 3,
    v3avs_types_V3Volume_Unit_AU_TEASPOON = 4,
    v3avs_types_V3Volume_Unit_CUBIC_CENTIMETER = 5,
    v3avs_types_V3Volume_Unit_CUBIC_METER = 6,
    v3avs_types_V3Volume_Unit_UK_GALLON = 7,
    v3avs_types_V3Volume_Unit_UK_QUART = 8,
    v3avs_types_V3Volume_Unit_UK_PINT = 9,
    v3avs_types_V3Volume_Unit_UK_CUP = 10,
    v3avs_types_V3Volume_Unit_UK_GILL = 11,
    v3avs_types_V3Volume_Unit_UK_OUNCE = 12,
    v3avs_types_V3Volume_Unit_UK_DRAM = 13,
    v3avs_types_V3Volume_Unit_US_FLUID_GALLON = 14,
    v3avs_types_V3Volume_Unit_US_FLUID_QUART = 15,
    v3avs_types_V3Volume_Unit_US_FLUID_PINT = 16,
    v3avs_types_V3Volume_Unit_US_FLUID_CUP = 17,
    v3avs_types_V3Volume_Unit_US_FLUID_OUNCE = 18,
    v3avs_types_V3Volume_Unit_US_TABLESPOON = 19,
    v3avs_types_V3Volume_Unit_US_TEASPOON = 20,
    v3avs_types_V3Volume_Unit_US_DRAM = 21,
    v3avs_types_V3Volume_Unit_US_DRY_GALLON = 22,
    v3avs_types_V3Volume_Unit_US_DRY_QUART = 23,
    v3avs_types_V3Volume_Unit_US_DRY_PINT = 24,
    v3avs_types_V3Volume_Unit_US_DRY_CUP = 25,
    v3avs_types_V3Volume_Unit_US_DRY_OUNCE = 26,
    v3avs_types_V3Volume_Unit_CUBIC_INCH = 27,
    v3avs_types_V3Volume_Unit_CUBIC_FOOT = 28,
    v3avs_types_V3Volume_Unit_CUBIC_YARD = 29,
    v3avs_types_V3Volume_Unit_METRIC_CUP = 30,
    v3avs_types_V3Volume_Unit_METRIC_TEASPOON = 31,
    v3avs_types_V3Volume_Unit_UK_FLUID_DRAM = 32,
    v3avs_types_V3Volume_Unit_UK_FLUID_OUNCE = 33,
    v3avs_types_V3Volume_Unit_US_GILL = 34
} v3avs_types_V3Volume_Unit;
#define _v3avs_types_V3Volume_Unit_MIN v3avs_types_V3Volume_Unit_LITER
#define _v3avs_types_V3Volume_Unit_MAX v3avs_types_V3Volume_Unit_US_GILL
#define _v3avs_types_V3Volume_Unit_ARRAYSIZE ((v3avs_types_V3Volume_Unit)(v3avs_types_V3Volume_Unit_US_GILL+1))

/* Struct definitions */
typedef struct _v3avs_types_V3Volume {
    float value;
    v3avs_types_V3Volume_Unit unit;
/* @@protoc_insertion_point(struct:v3avs_types_V3Volume) */
} v3avs_types_V3Volume;

/* Default values for struct fields */

/* Initializer values for message structs */
#define v3avs_types_V3Volume_init_default        {0, (v3avs_types_V3Volume_Unit)0}
#define v3avs_types_V3Volume_init_zero           {0, (v3avs_types_V3Volume_Unit)0}

/* Field tags (for use in manual encoding/decoding) */
#define v3avs_types_V3Volume_value_tag           1
#define v3avs_types_V3Volume_unit_tag            2

/* Struct field encoding specification for nanopb */
extern const pb_field_t v3avs_types_V3Volume_fields[3];

/* Maximum encoded size of messages (where known) */
#define v3avs_types_V3Volume_size                7

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3VOLUME_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
