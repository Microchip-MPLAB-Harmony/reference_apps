#include "ack_user_config.h"
#if defined(ACK_COOKING_TIME_CONTROLLER)

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Tue Aug 27 15:16:17 2019. */

#ifndef PB_V3AVS_TYPES_V3INTEGRALPOWERLEVEL_PB_H_INCLUDED
#define PB_V3AVS_TYPES_V3INTEGRALPOWERLEVEL_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _v3avs_types_V3IntegralPowerLevel {
    int32_t value;
/* @@protoc_insertion_point(struct:v3avs_types_V3IntegralPowerLevel) */
} v3avs_types_V3IntegralPowerLevel;

/* Default values for struct fields */

/* Initializer values for message structs */
#define v3avs_types_V3IntegralPowerLevel_init_default {0}
#define v3avs_types_V3IntegralPowerLevel_init_zero {0}

/* Field tags (for use in manual encoding/decoding) */
#define v3avs_types_V3IntegralPowerLevel_value_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t v3avs_types_V3IntegralPowerLevel_fields[2];

/* Maximum encoded size of messages (where known) */
#define v3avs_types_V3IntegralPowerLevel_size    6

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3INTEGRALPOWERLEVEL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

#endif
