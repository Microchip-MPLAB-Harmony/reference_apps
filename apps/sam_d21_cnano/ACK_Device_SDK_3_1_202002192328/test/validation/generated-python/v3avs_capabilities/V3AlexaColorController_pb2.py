# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v3avs_capabilities/V3AlexaColorController.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from v3avs_types import V3Color_pb2 as v3avs__types_dot_V3Color__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='v3avs_capabilities/V3AlexaColorController.proto',
  package='v3avs_capabilities',
  syntax='proto3',
  serialized_pb=_b('\n/v3avs_capabilities/V3AlexaColorController.proto\x12\x12v3avs_capabilities\x1a\x19v3avs_types/V3Color.proto\"\xfd\x02\n\x16V3AlexaColorController\x1a\xb2\x01\n\tDirective\x12P\n\x0e\x64irective_name\x18\x01 \x01(\x0e\x32\x38.v3avs_capabilities.V3AlexaColorController.DirectiveName\x12H\n\tset_color\x18\x02 \x01(\x0b\x32\x33.v3avs_capabilities.V3AlexaColorController.SetColorH\x00\x42\t\n\x07payload\x1a/\n\x08SetColor\x12#\n\x05\x63olor\x18\x01 \x01(\x0b\x32\x14.v3avs_types.V3Color\x1a\x07\n\x05\x45vent\x1a\x34\n\rColorProperty\x12#\n\x05\x63olor\x18\x01 \x01(\x0b\x32\x14.v3avs_types.V3Color\"\x1e\n\rDirectiveName\x12\r\n\tSET_COLOR\x10\x00\"\x1e\n\x0cPropertyName\x12\x0e\n\nCOLOR_PROP\x10\x00\x42\x42\n*com.amazon.proto.avs.v3.v3avs_capabilitiesB\x14\x41lexaColorControllerb\x06proto3')
  ,
  dependencies=[v3avs__types_dot_V3Color__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_V3ALEXACOLORCONTROLLER_DIRECTIVENAME = _descriptor.EnumDescriptor(
  name='DirectiveName',
  full_name='v3avs_capabilities.V3AlexaColorController.DirectiveName',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SET_COLOR', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=418,
  serialized_end=448,
)
_sym_db.RegisterEnumDescriptor(_V3ALEXACOLORCONTROLLER_DIRECTIVENAME)

_V3ALEXACOLORCONTROLLER_PROPERTYNAME = _descriptor.EnumDescriptor(
  name='PropertyName',
  full_name='v3avs_capabilities.V3AlexaColorController.PropertyName',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COLOR_PROP', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=450,
  serialized_end=480,
)
_sym_db.RegisterEnumDescriptor(_V3ALEXACOLORCONTROLLER_PROPERTYNAME)


_V3ALEXACOLORCONTROLLER_DIRECTIVE = _descriptor.Descriptor(
  name='Directive',
  full_name='v3avs_capabilities.V3AlexaColorController.Directive',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='directive_name', full_name='v3avs_capabilities.V3AlexaColorController.Directive.directive_name', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='set_color', full_name='v3avs_capabilities.V3AlexaColorController.Directive.set_color', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='v3avs_capabilities.V3AlexaColorController.Directive.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=126,
  serialized_end=304,
)

_V3ALEXACOLORCONTROLLER_SETCOLOR = _descriptor.Descriptor(
  name='SetColor',
  full_name='v3avs_capabilities.V3AlexaColorController.SetColor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='color', full_name='v3avs_capabilities.V3AlexaColorController.SetColor.color', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=306,
  serialized_end=353,
)

_V3ALEXACOLORCONTROLLER_EVENT = _descriptor.Descriptor(
  name='Event',
  full_name='v3avs_capabilities.V3AlexaColorController.Event',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=355,
  serialized_end=362,
)

_V3ALEXACOLORCONTROLLER_COLORPROPERTY = _descriptor.Descriptor(
  name='ColorProperty',
  full_name='v3avs_capabilities.V3AlexaColorController.ColorProperty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='color', full_name='v3avs_capabilities.V3AlexaColorController.ColorProperty.color', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=364,
  serialized_end=416,
)

_V3ALEXACOLORCONTROLLER = _descriptor.Descriptor(
  name='V3AlexaColorController',
  full_name='v3avs_capabilities.V3AlexaColorController',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_V3ALEXACOLORCONTROLLER_DIRECTIVE, _V3ALEXACOLORCONTROLLER_SETCOLOR, _V3ALEXACOLORCONTROLLER_EVENT, _V3ALEXACOLORCONTROLLER_COLORPROPERTY, ],
  enum_types=[
    _V3ALEXACOLORCONTROLLER_DIRECTIVENAME,
    _V3ALEXACOLORCONTROLLER_PROPERTYNAME,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=480,
)

_V3ALEXACOLORCONTROLLER_DIRECTIVE.fields_by_name['directive_name'].enum_type = _V3ALEXACOLORCONTROLLER_DIRECTIVENAME
_V3ALEXACOLORCONTROLLER_DIRECTIVE.fields_by_name['set_color'].message_type = _V3ALEXACOLORCONTROLLER_SETCOLOR
_V3ALEXACOLORCONTROLLER_DIRECTIVE.containing_type = _V3ALEXACOLORCONTROLLER
_V3ALEXACOLORCONTROLLER_DIRECTIVE.oneofs_by_name['payload'].fields.append(
  _V3ALEXACOLORCONTROLLER_DIRECTIVE.fields_by_name['set_color'])
_V3ALEXACOLORCONTROLLER_DIRECTIVE.fields_by_name['set_color'].containing_oneof = _V3ALEXACOLORCONTROLLER_DIRECTIVE.oneofs_by_name['payload']
_V3ALEXACOLORCONTROLLER_SETCOLOR.fields_by_name['color'].message_type = v3avs__types_dot_V3Color__pb2._V3COLOR
_V3ALEXACOLORCONTROLLER_SETCOLOR.containing_type = _V3ALEXACOLORCONTROLLER
_V3ALEXACOLORCONTROLLER_EVENT.containing_type = _V3ALEXACOLORCONTROLLER
_V3ALEXACOLORCONTROLLER_COLORPROPERTY.fields_by_name['color'].message_type = v3avs__types_dot_V3Color__pb2._V3COLOR
_V3ALEXACOLORCONTROLLER_COLORPROPERTY.containing_type = _V3ALEXACOLORCONTROLLER
_V3ALEXACOLORCONTROLLER_DIRECTIVENAME.containing_type = _V3ALEXACOLORCONTROLLER
_V3ALEXACOLORCONTROLLER_PROPERTYNAME.containing_type = _V3ALEXACOLORCONTROLLER
DESCRIPTOR.message_types_by_name['V3AlexaColorController'] = _V3ALEXACOLORCONTROLLER

V3AlexaColorController = _reflection.GeneratedProtocolMessageType('V3AlexaColorController', (_message.Message,), dict(

  Directive = _reflection.GeneratedProtocolMessageType('Directive', (_message.Message,), dict(
    DESCRIPTOR = _V3ALEXACOLORCONTROLLER_DIRECTIVE,
    __module__ = 'v3avs_capabilities.V3AlexaColorController_pb2'
    # @@protoc_insertion_point(class_scope:v3avs_capabilities.V3AlexaColorController.Directive)
    ))
  ,

  SetColor = _reflection.GeneratedProtocolMessageType('SetColor', (_message.Message,), dict(
    DESCRIPTOR = _V3ALEXACOLORCONTROLLER_SETCOLOR,
    __module__ = 'v3avs_capabilities.V3AlexaColorController_pb2'
    # @@protoc_insertion_point(class_scope:v3avs_capabilities.V3AlexaColorController.SetColor)
    ))
  ,

  Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), dict(
    DESCRIPTOR = _V3ALEXACOLORCONTROLLER_EVENT,
    __module__ = 'v3avs_capabilities.V3AlexaColorController_pb2'
    # @@protoc_insertion_point(class_scope:v3avs_capabilities.V3AlexaColorController.Event)
    ))
  ,

  ColorProperty = _reflection.GeneratedProtocolMessageType('ColorProperty', (_message.Message,), dict(
    DESCRIPTOR = _V3ALEXACOLORCONTROLLER_COLORPROPERTY,
    __module__ = 'v3avs_capabilities.V3AlexaColorController_pb2'
    # @@protoc_insertion_point(class_scope:v3avs_capabilities.V3AlexaColorController.ColorProperty)
    ))
  ,
  DESCRIPTOR = _V3ALEXACOLORCONTROLLER,
  __module__ = 'v3avs_capabilities.V3AlexaColorController_pb2'
  # @@protoc_insertion_point(class_scope:v3avs_capabilities.V3AlexaColorController)
  ))
_sym_db.RegisterMessage(V3AlexaColorController)
_sym_db.RegisterMessage(V3AlexaColorController.Directive)
_sym_db.RegisterMessage(V3AlexaColorController.SetColor)
_sym_db.RegisterMessage(V3AlexaColorController.Event)
_sym_db.RegisterMessage(V3AlexaColorController.ColorProperty)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n*com.amazon.proto.avs.v3.v3avs_capabilitiesB\024AlexaColorController'))
# @@protoc_insertion_point(module_scope)
