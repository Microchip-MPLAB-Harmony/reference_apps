#include "ack_user_config.h"
#if defined(ACK_COOKING) || defined(ACK_COOKING_TEMPERATURE_CONTROLLER)

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Jun 24 21:19:33 2019. */

#ifndef PB_V3AVS_TYPES_V3TIMEINTERVAL_PB_H_INCLUDED
#define PB_V3AVS_TYPES_V3TIMEINTERVAL_PB_H_INCLUDED
#include <pb.h>

#include "v3avs_types/V3DateTime.pb.h"

#include "v3avs_types/V3Duration.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _v3avs_types_V3TimeInterval {
    v3avs_types_V3DateTime start;
    v3avs_types_V3DateTime end;
    v3avs_types_V3Duration duration;
/* @@protoc_insertion_point(struct:v3avs_types_V3TimeInterval) */
} v3avs_types_V3TimeInterval;

/* Default values for struct fields */

/* Initializer values for message structs */
#define v3avs_types_V3TimeInterval_init_default  {v3avs_types_V3DateTime_init_default, v3avs_types_V3DateTime_init_default, v3avs_types_V3Duration_init_default}
#define v3avs_types_V3TimeInterval_init_zero     {v3avs_types_V3DateTime_init_zero, v3avs_types_V3DateTime_init_zero, v3avs_types_V3Duration_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define v3avs_types_V3TimeInterval_start_tag     1
#define v3avs_types_V3TimeInterval_end_tag       2
#define v3avs_types_V3TimeInterval_duration_tag  3

/* Struct field encoding specification for nanopb */
extern const pb_field_t v3avs_types_V3TimeInterval_fields[4];

/* Maximum encoded size of messages (where known) */
#define v3avs_types_V3TimeInterval_size          39

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3TIMEINTERVAL_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

#endif
