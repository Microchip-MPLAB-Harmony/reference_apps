#include "ack_user_config.h"
#ifdef ACK_POWER_CONTROLLER

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Jun 24 21:19:23 2019. */

#ifndef PB_V3AVS_CAPABILITIES_V3ALEXAPOWERCONTROLLER_PB_H_INCLUDED
#define PB_V3AVS_CAPABILITIES_V3ALEXAPOWERCONTROLLER_PB_H_INCLUDED
#include <pb.h>

#include "v3avs_types/V3PowerState.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _v3avs_capabilities_V3AlexaPowerController_DirectiveName {
    v3avs_capabilities_V3AlexaPowerController_DirectiveName_TURN_ON = 0,
    v3avs_capabilities_V3AlexaPowerController_DirectiveName_TURN_OFF = 1
} v3avs_capabilities_V3AlexaPowerController_DirectiveName;
#define _v3avs_capabilities_V3AlexaPowerController_DirectiveName_MIN v3avs_capabilities_V3AlexaPowerController_DirectiveName_TURN_ON
#define _v3avs_capabilities_V3AlexaPowerController_DirectiveName_MAX v3avs_capabilities_V3AlexaPowerController_DirectiveName_TURN_OFF
#define _v3avs_capabilities_V3AlexaPowerController_DirectiveName_ARRAYSIZE ((v3avs_capabilities_V3AlexaPowerController_DirectiveName)(v3avs_capabilities_V3AlexaPowerController_DirectiveName_TURN_OFF+1))

typedef enum _v3avs_capabilities_V3AlexaPowerController_PropertyName {
    v3avs_capabilities_V3AlexaPowerController_PropertyName_POWER_STATE_PROP = 0
} v3avs_capabilities_V3AlexaPowerController_PropertyName;
#define _v3avs_capabilities_V3AlexaPowerController_PropertyName_MIN v3avs_capabilities_V3AlexaPowerController_PropertyName_POWER_STATE_PROP
#define _v3avs_capabilities_V3AlexaPowerController_PropertyName_MAX v3avs_capabilities_V3AlexaPowerController_PropertyName_POWER_STATE_PROP
#define _v3avs_capabilities_V3AlexaPowerController_PropertyName_ARRAYSIZE ((v3avs_capabilities_V3AlexaPowerController_PropertyName)(v3avs_capabilities_V3AlexaPowerController_PropertyName_POWER_STATE_PROP+1))

/* Struct definitions */
typedef struct _v3avs_capabilities_V3AlexaPowerController {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPowerController) */
} v3avs_capabilities_V3AlexaPowerController;

typedef struct _v3avs_capabilities_V3AlexaPowerController_Event {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPowerController_Event) */
} v3avs_capabilities_V3AlexaPowerController_Event;

typedef struct _v3avs_capabilities_V3AlexaPowerController_TurnOff {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPowerController_TurnOff) */
} v3avs_capabilities_V3AlexaPowerController_TurnOff;

typedef struct _v3avs_capabilities_V3AlexaPowerController_TurnOn {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPowerController_TurnOn) */
} v3avs_capabilities_V3AlexaPowerController_TurnOn;

typedef struct _v3avs_capabilities_V3AlexaPowerController_Directive {
    v3avs_capabilities_V3AlexaPowerController_DirectiveName directive_name;
    pb_size_t which_payload;
    union {
        v3avs_capabilities_V3AlexaPowerController_TurnOn turn_on;
        v3avs_capabilities_V3AlexaPowerController_TurnOff turn_off;
    } payload;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPowerController_Directive) */
} v3avs_capabilities_V3AlexaPowerController_Directive;

typedef struct _v3avs_capabilities_V3AlexaPowerController_PowerStateProperty {
    v3avs_types_V3PowerState power_state;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaPowerController_PowerStateProperty) */
} v3avs_capabilities_V3AlexaPowerController_PowerStateProperty;

/* Default values for struct fields */

/* Initializer values for message structs */
#define v3avs_capabilities_V3AlexaPowerController_init_default {0}
#define v3avs_capabilities_V3AlexaPowerController_Directive_init_default {(v3avs_capabilities_V3AlexaPowerController_DirectiveName)0, 0, {v3avs_capabilities_V3AlexaPowerController_TurnOn_init_default}}
#define v3avs_capabilities_V3AlexaPowerController_Event_init_default {0}
#define v3avs_capabilities_V3AlexaPowerController_TurnOn_init_default {0}
#define v3avs_capabilities_V3AlexaPowerController_TurnOff_init_default {0}
#define v3avs_capabilities_V3AlexaPowerController_PowerStateProperty_init_default {v3avs_types_V3PowerState_init_default}
#define v3avs_capabilities_V3AlexaPowerController_init_zero {0}
#define v3avs_capabilities_V3AlexaPowerController_Directive_init_zero {(v3avs_capabilities_V3AlexaPowerController_DirectiveName)0, 0, {v3avs_capabilities_V3AlexaPowerController_TurnOn_init_zero}}
#define v3avs_capabilities_V3AlexaPowerController_Event_init_zero {0}
#define v3avs_capabilities_V3AlexaPowerController_TurnOn_init_zero {0}
#define v3avs_capabilities_V3AlexaPowerController_TurnOff_init_zero {0}
#define v3avs_capabilities_V3AlexaPowerController_PowerStateProperty_init_zero {v3avs_types_V3PowerState_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define v3avs_capabilities_V3AlexaPowerController_Directive_turn_on_tag 2
#define v3avs_capabilities_V3AlexaPowerController_Directive_turn_off_tag 3
#define v3avs_capabilities_V3AlexaPowerController_Directive_directive_name_tag 1
#define v3avs_capabilities_V3AlexaPowerController_PowerStateProperty_power_state_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t v3avs_capabilities_V3AlexaPowerController_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaPowerController_Directive_fields[4];
extern const pb_field_t v3avs_capabilities_V3AlexaPowerController_Event_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaPowerController_TurnOn_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaPowerController_TurnOff_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaPowerController_PowerStateProperty_fields[2];

/* Maximum encoded size of messages (where known) */
#define v3avs_capabilities_V3AlexaPowerController_size 0
#define v3avs_capabilities_V3AlexaPowerController_Directive_size 4
#define v3avs_capabilities_V3AlexaPowerController_Event_size 0
#define v3avs_capabilities_V3AlexaPowerController_TurnOn_size 0
#define v3avs_capabilities_V3AlexaPowerController_TurnOff_size 0
#define v3avs_capabilities_V3AlexaPowerController_PowerStateProperty_size 4

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3ALEXAPOWERCONTROLLER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

#endif
