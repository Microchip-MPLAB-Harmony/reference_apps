#include "ack_user_config.h"
#ifdef ACK_RANGE_CONTROLLER

/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Mon Jun 24 21:19:24 2019. */

#ifndef PB_V3AVS_CAPABILITIES_V3ALEXARANGECONTROLLER_PB_H_INCLUDED
#define PB_V3AVS_CAPABILITIES_V3ALEXARANGECONTROLLER_PB_H_INCLUDED
#include <pb.h>

#include "v3avs_types/V3Range.pb.h"

#include "v3avs_types/V3RangeDelta.pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _v3avs_capabilities_V3AlexaRangeController_DirectiveName {
    v3avs_capabilities_V3AlexaRangeController_DirectiveName_SET_RANGE_VALUE = 0,
    v3avs_capabilities_V3AlexaRangeController_DirectiveName_ADJUST_RANGE_VALUE = 1
} v3avs_capabilities_V3AlexaRangeController_DirectiveName;
#define _v3avs_capabilities_V3AlexaRangeController_DirectiveName_MIN v3avs_capabilities_V3AlexaRangeController_DirectiveName_SET_RANGE_VALUE
#define _v3avs_capabilities_V3AlexaRangeController_DirectiveName_MAX v3avs_capabilities_V3AlexaRangeController_DirectiveName_ADJUST_RANGE_VALUE
#define _v3avs_capabilities_V3AlexaRangeController_DirectiveName_ARRAYSIZE ((v3avs_capabilities_V3AlexaRangeController_DirectiveName)(v3avs_capabilities_V3AlexaRangeController_DirectiveName_ADJUST_RANGE_VALUE+1))

typedef enum _v3avs_capabilities_V3AlexaRangeController_PropertyName {
    v3avs_capabilities_V3AlexaRangeController_PropertyName_RANGE_VALUE_PROP = 0
} v3avs_capabilities_V3AlexaRangeController_PropertyName;
#define _v3avs_capabilities_V3AlexaRangeController_PropertyName_MIN v3avs_capabilities_V3AlexaRangeController_PropertyName_RANGE_VALUE_PROP
#define _v3avs_capabilities_V3AlexaRangeController_PropertyName_MAX v3avs_capabilities_V3AlexaRangeController_PropertyName_RANGE_VALUE_PROP
#define _v3avs_capabilities_V3AlexaRangeController_PropertyName_ARRAYSIZE ((v3avs_capabilities_V3AlexaRangeController_PropertyName)(v3avs_capabilities_V3AlexaRangeController_PropertyName_RANGE_VALUE_PROP+1))

/* Struct definitions */
typedef struct _v3avs_capabilities_V3AlexaRangeController {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaRangeController) */
} v3avs_capabilities_V3AlexaRangeController;

typedef struct _v3avs_capabilities_V3AlexaRangeController_Event {
    char dummy_field;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaRangeController_Event) */
} v3avs_capabilities_V3AlexaRangeController_Event;

typedef struct _v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue {
    v3avs_types_V3RangeDelta range_delta;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue) */
} v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue;

typedef struct _v3avs_capabilities_V3AlexaRangeController_RangeValueProperty {
    v3avs_types_V3Range range_value;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaRangeController_RangeValueProperty) */
} v3avs_capabilities_V3AlexaRangeController_RangeValueProperty;

typedef struct _v3avs_capabilities_V3AlexaRangeController_SetRangeValue {
    v3avs_types_V3Range range_value;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaRangeController_SetRangeValue) */
} v3avs_capabilities_V3AlexaRangeController_SetRangeValue;

typedef struct _v3avs_capabilities_V3AlexaRangeController_Directive {
    v3avs_capabilities_V3AlexaRangeController_DirectiveName directive_name;
    pb_size_t which_payload;
    union {
        v3avs_capabilities_V3AlexaRangeController_SetRangeValue set_range_value;
        v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue adjust_range_value;
    } payload;
/* @@protoc_insertion_point(struct:v3avs_capabilities_V3AlexaRangeController_Directive) */
} v3avs_capabilities_V3AlexaRangeController_Directive;

/* Default values for struct fields */

/* Initializer values for message structs */
#define v3avs_capabilities_V3AlexaRangeController_init_default {0}
#define v3avs_capabilities_V3AlexaRangeController_Directive_init_default {(v3avs_capabilities_V3AlexaRangeController_DirectiveName)0, 0, {v3avs_capabilities_V3AlexaRangeController_SetRangeValue_init_default}}
#define v3avs_capabilities_V3AlexaRangeController_SetRangeValue_init_default {v3avs_types_V3Range_init_default}
#define v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue_init_default {v3avs_types_V3RangeDelta_init_default}
#define v3avs_capabilities_V3AlexaRangeController_Event_init_default {0}
#define v3avs_capabilities_V3AlexaRangeController_RangeValueProperty_init_default {v3avs_types_V3Range_init_default}
#define v3avs_capabilities_V3AlexaRangeController_init_zero {0}
#define v3avs_capabilities_V3AlexaRangeController_Directive_init_zero {(v3avs_capabilities_V3AlexaRangeController_DirectiveName)0, 0, {v3avs_capabilities_V3AlexaRangeController_SetRangeValue_init_zero}}
#define v3avs_capabilities_V3AlexaRangeController_SetRangeValue_init_zero {v3avs_types_V3Range_init_zero}
#define v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue_init_zero {v3avs_types_V3RangeDelta_init_zero}
#define v3avs_capabilities_V3AlexaRangeController_Event_init_zero {0}
#define v3avs_capabilities_V3AlexaRangeController_RangeValueProperty_init_zero {v3avs_types_V3Range_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue_range_delta_tag 1
#define v3avs_capabilities_V3AlexaRangeController_RangeValueProperty_range_value_tag 1
#define v3avs_capabilities_V3AlexaRangeController_SetRangeValue_range_value_tag 1
#define v3avs_capabilities_V3AlexaRangeController_Directive_set_range_value_tag 2
#define v3avs_capabilities_V3AlexaRangeController_Directive_adjust_range_value_tag 3
#define v3avs_capabilities_V3AlexaRangeController_Directive_directive_name_tag 1

/* Struct field encoding specification for nanopb */
extern const pb_field_t v3avs_capabilities_V3AlexaRangeController_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaRangeController_Directive_fields[4];
extern const pb_field_t v3avs_capabilities_V3AlexaRangeController_SetRangeValue_fields[2];
extern const pb_field_t v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue_fields[2];
extern const pb_field_t v3avs_capabilities_V3AlexaRangeController_Event_fields[1];
extern const pb_field_t v3avs_capabilities_V3AlexaRangeController_RangeValueProperty_fields[2];

/* Maximum encoded size of messages (where known) */
#define v3avs_capabilities_V3AlexaRangeController_size 0
#define v3avs_capabilities_V3AlexaRangeController_Directive_size 17
#define v3avs_capabilities_V3AlexaRangeController_SetRangeValue_size 11
#define v3avs_capabilities_V3AlexaRangeController_AdjustRangeValue_size 13
#define v3avs_capabilities_V3AlexaRangeController_Event_size 0
#define v3avs_capabilities_V3AlexaRangeController_RangeValueProperty_size 11

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define V3ALEXARANGECONTROLLER_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif

#endif
